% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipleline_BLS.R
\name{get_bls}
\alias{get_bls}
\title{Retrieve and Tidy BLS Series Data}
\usage{
get_bls(series_id, start_year, end_year = format(Sys.Date(), "\%Y"))
}
\arguments{
\item{series_id}{A character string representing the BLS series ID (e.g., \code{"LNS14000000"}).}

\item{start_year}{An integer representing the starting year of the desired time series.}

\item{end_year}{An optional integer for the ending year. Defaults to the current year (\code{format(Sys.Date(), "\%Y")}).}
}
\value{
A tibble with columns: \code{date}, \code{year}, \code{month}, \code{value}, and \code{seriesID}, one row per observation.
}
\description{
Fetches data for a single BLS series across a multi-year range. Handles API chunking automatically
by splitting large ranges into smaller segments (e.g., 20-year chunks), retrieving each piece via the
BLS API, tidying the results, and combining them into a single tibble.
}
\details{
Internally uses \code{\link[=split_year_range]{split_year_range()}} to break the date range into chunks,
\code{\link[=get_bls_series_chunks]{get_bls_series_chunks()}} to fetch each chunk from the API, and \code{\link[=merge_bls_series_chunks]{merge_bls_series_chunks()}}
to clean and combine the results.

Requires the \code{BLS_KEY} environment variable to be set with a valid BLS API key.
}
\examples{
\dontrun{
Sys.setenv(BLS_KEY = "your_bls_api_key")
get_bls("LNS14000000", 2000, 2023)
}

}
\seealso{
\code{\link[=split_year_range]{split_year_range()}}, \code{\link[=get_bls_series_chunks]{get_bls_series_chunks()}}, \code{\link[=merge_bls_series_chunks]{merge_bls_series_chunks()}}
}
